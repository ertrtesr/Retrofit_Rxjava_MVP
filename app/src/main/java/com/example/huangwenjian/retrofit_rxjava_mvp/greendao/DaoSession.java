package com.example.huangwenjian.retrofit_rxjava_mvp.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.example.huangwenjian.retrofit_rxjava_mvp.entity.db_entity.Father;
import com.example.huangwenjian.retrofit_rxjava_mvp.entity.db_entity.Person;
import com.example.huangwenjian.retrofit_rxjava_mvp.entity.db_entity.ThreadInfo;
import com.example.huangwenjian.retrofit_rxjava_mvp.entity.db_entity.User;

import com.example.huangwenjian.retrofit_rxjava_mvp.greendao.FatherDao;
import com.example.huangwenjian.retrofit_rxjava_mvp.greendao.PersonDao;
import com.example.huangwenjian.retrofit_rxjava_mvp.greendao.ThreadInfoDao;
import com.example.huangwenjian.retrofit_rxjava_mvp.greendao.UserDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig fatherDaoConfig;
    private final DaoConfig personDaoConfig;
    private final DaoConfig threadInfoDaoConfig;
    private final DaoConfig userDaoConfig;

    private final FatherDao fatherDao;
    private final PersonDao personDao;
    private final ThreadInfoDao threadInfoDao;
    private final UserDao userDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        fatherDaoConfig = daoConfigMap.get(FatherDao.class).clone();
        fatherDaoConfig.initIdentityScope(type);

        personDaoConfig = daoConfigMap.get(PersonDao.class).clone();
        personDaoConfig.initIdentityScope(type);

        threadInfoDaoConfig = daoConfigMap.get(ThreadInfoDao.class).clone();
        threadInfoDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        fatherDao = new FatherDao(fatherDaoConfig, this);
        personDao = new PersonDao(personDaoConfig, this);
        threadInfoDao = new ThreadInfoDao(threadInfoDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);

        registerDao(Father.class, fatherDao);
        registerDao(Person.class, personDao);
        registerDao(ThreadInfo.class, threadInfoDao);
        registerDao(User.class, userDao);
    }
    
    public void clear() {
        fatherDaoConfig.clearIdentityScope();
        personDaoConfig.clearIdentityScope();
        threadInfoDaoConfig.clearIdentityScope();
        userDaoConfig.clearIdentityScope();
    }

    public FatherDao getFatherDao() {
        return fatherDao;
    }

    public PersonDao getPersonDao() {
        return personDao;
    }

    public ThreadInfoDao getThreadInfoDao() {
        return threadInfoDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

}
